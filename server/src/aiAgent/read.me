需求：用户需要在后端实现一个系统，允许用户选择已上传的文件进行基于向量相似度的查询，支持选择一个、多个或所有文件。

解决方案：

    文件上传：用户上传文件时，后端将文件内容向量化，并存储到 PostgreSQL 数据库中，向量存储使用 pgvector 扩展。
    文件选择：用户可以通过 API 获取所有已上传的文件列表，并从中选择文件作为查询范围。
    向量相似度查询：根据用户选择的文件，后端通过 pgvector 在 PostgreSQL 中进行向量相似度查询，返回与问题向量最相似的结果。

技术栈：

    PostgreSQL：作为数据库，使用 pgvector 扩展存储和查询向量。
    Express：构建后端 API。
    pgvector：用于实现向量存储和相似度查询。
    向量化：使用 sentence-transformers 等库进行文件内容和问题的向量化。